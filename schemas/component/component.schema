{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/microsoft/botframework-sdk/master/schemas/component/component.schema",
    "title": "JSON Schema definition for Bot Framework dialog schemas.",
    "description": "In order to create a component for Bot Framework .dialog files you need to create a schema file describing your configuration that meets this definition.  This extends http://json-schema.org/draft-07/schema#.",
    "allOf": [
        {
            "$ref": "http://json-schema.org/draft-07/schema#"
        }
    ],
    "definitions": {
        "role": {
            "title": "$role",
            "description": "Defines the role played in the dialog schema one of [expression|interface|implements($kind)].",
            "type": "string",
            "pattern": "^((expression)|(interface)|(implements\\([a-zA-Z][a-zA-Z0-9.]*\\)))$"
        },
        "kind": {
            "title": "$kind",
            "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$"
        },
        "component": {
            "$comment": "This is the base dialog component definition.",
            "properties": {
                "$id": {
                    "title": "Unique id for inline definition",
                    "description": "Inline id for reuse of an inline definition",
                    "type": "string",
                    "pattern": "^([a-zA-Z][a-zA-Z0-9.]*)$"
                },
                "$copy": {
                    "title": "Component to use for default properties",
                    "description": "Copy the definition by id from a .dialog file.",
                    "type": "string",
                    "pattern": "^(([a-zA-Z][a-zA-Z0-9.]*)?(#[a-zA-Z][a-zA-Z0-9.]*)?)$"
                },
                "$kind": {
                    "title": "Kind of dialog object",
                    "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
                    "type": "string",
                    "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$"
                },
                "$designer": {
                    "title": "Designer information",
                    "type": "object",
                    "description": "Extra information for the Bot Framework Composer."
                }
            }
        },
        "expression": {
            "type": "string",
            "pattern": "^(\\S){1}"
        },
        "equalsExpression": {
            "type": "string",
            "pattern": "^=(\\S){1}"
        },
        "condition": {
            "$role": "expression",
            "oneOf": [
                {
                    "type": "boolean"
                },
                {
                    "$ref": "#/definitions/expression"
                }
            ]
        },
        "booleanExpression": {
            "$role": "expression",
            "oneOf": [
                {
                    "type": "boolean"
                },
                {
                    "$ref": "#/definitions/equalsExpression"
                }
            ]
        },
        "numberExpression": {
            "$role": "expression",
            "oneOf": [
                {
                    "type": "number"
                },
                {
                    "$ref": "#/definitions/equalsExpression"
                }
            ]
        },
        "integerExpression": {
            "$role": "expression",
            "oneOf": [
                {
                    "type": "integer"
                },
                {
                    "$ref": "#/definitions/equalsExpression"
                }
            ]
        },
        "stringExpression": {
            "$ref": "#/definitions/expression"
        },
        "arrayExpression": {
            "$role": "expression",
            "oneOf": [
                {
                    "type": "array"
                },
                {
                    "$ref": "#/definitions/equalsExpression"
                }
            ]
        },
        "objectExpression": {
            "$role": "expression",
            "oneOf": [
                {
                    "type": "object"
                },
                {
                    "$ref": "#/definitions/equalsExpression"
                }
            ]
        },
        "valueExpression": {
            "$role": "expression",
            "oneOf": [
                {
                    "type": "object"
                },
                {
                    "type": "array"
                },
                {
                    "type": "string"
                },
                {
                    "type": "boolean"
                },
                {
                    "type": "number"
                },
                {
                    "type": "integer"
                }
            ]
        }
    },
    "properties": {
        "$role": {
            "oneOf": [
                {
                    "$ref": "#/definitions/role"
                },
                {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/role"
                    }
                }
            ]
        },
        "$kind": {
            "$ref": "#/definitions/kind"
        }
    }
}